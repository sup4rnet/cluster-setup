- name: Ensure requirements in place
  package:
    name:
      - bridge-utils
    state: present

- name: Add bridge
  ansible.builtin.nmcli:
    conn_name: "{{ item['bridge_name'] }}"
    ifname: "{{ item['bridge_name'] }}"
    type: bridge
    ip4: "{{ item['bridge_host_ip'] }}"
    gw4: "{{ item['bridge_host_gw'] }}"
    stp: false
    state: present
  with_items: "{{ bridges }}"

- name: Add bridge-slave connection
  ansible.builtin.nmcli:
    conn_name: bridge-slave-{{ item['bridge_host_iface'] }}
    ifname: "{{ item['bridge_host_iface'] }}"
    slave_type: bridge
    type: bridge-slave
    master: "{{ item['bridge_name'] }}"
    state: present
  with_items: "{{ bridges }}"

- name: Set connection up
  ansible.builtin.command:
    cmd: nmcli con up "bridge-slave-{{ item['bridge_host_iface'] }}"
  with_items: "{{ bridges }}"

- name: Define a new bridged network
  community.libvirt.virt_net:
    command: define
    name: "{{ item['libvirt_bridged_net_name'] }}"
    xml: '{{ lookup("template", "libvirt-network.xml.j2") }}'
  with_items: "{{ bridges }}"

- name: Ensure network started
  community.libvirt.virt_net:
    name: "{{ item['libvirt_bridged_net_name'] }}"
    state: active
  with_items: "{{ bridges }}"

- name: Autostart network
  community.libvirt.virt_net:
    name: "{{ item['libvirt_bridged_net_name'] }}"
    autostart: yes
  with_items: "{{ bridges }}"

